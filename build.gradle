buildscript {
    ext.kotlin_version = "1.3.11"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'jacoco'

mainClassName = "MainKt"

defaultTasks "run"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    ktlint
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage report."
    classDirectories = fileTree(
            dir: "$buildDir/classes/kotlin/main"
    )
    def coverageSourceDirs = [
            "src/main/kotlin"
    ]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/junitPlatformTest.exec")
    reports {
        xml.enabled = true
        html.enabled = false
        csv.enabled = false
    }

}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports")
    applyTo junitPlatformTest
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.29.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0"
    compile "com.github.kittinunf.fuel:fuel:1.5.0"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.7"
    compile "io.github.microutils:kotlin-logging:1.6.22"
    compile "org.slf4j:slf4j-simple:1.7.25"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testImplementation "io.mockk:mockk:1.8.13.kotlin13"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatformTest {
    enableAssertions = true
}

test {
    useJUnitPlatform()
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/junitPlatformTest.exec")
        includeNoLocationClasses = true
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

check.dependsOn ktlint
test.dependsOn junitPlatformTest


